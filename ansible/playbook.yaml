---
- name: Deploy Simple Spring Boot App on Amazon Linux 2023
  hosts: ec2
  become: true

  tasks:
    # Java 21 インストール
    - name: Install Amazon Corretto 21
      dnf:
        name: java-21-amazon-corretto
        state: present

    - name: Verify Java installation
      command: java -version
      register: java_version_output
      ignore_errors: true

    - name: Show Java version
      debug:
        var: java_version_output.stderr_lines

    # Spring Boot プロジェクト取得
    - name: Download Spring Boot starter project (JAR)
      get_url:
        url: "https://start.spring.io/starter.zip?type=gradle-project&language=java&bootVersion=3.4.1&groupId=com.example&artifactId=demo&name=demo&description=Demo+project+for+Spring+Boot&packageName=com.example.demo&packaging=jar&javaVersion=21&dependencies=web"
        dest: /home/ec2-user/demo.zip

    - name: Create demo directory
      file:
        path: /home/ec2-user/demo
        state: directory
        owner: ec2-user
        group: ec2-user
        mode: '0755'

    - name: Unzip project
      unarchive:
        src: /home/ec2-user/demo.zip
        dest: /home/ec2-user/demo
        remote_src: true

    # HelloController.java 生成
    - name: Create HelloController.java
      copy:
        dest: /home/ec2-user/demo/src/main/java/com/example/demo/HelloController.java
        content: |
          package com.example.demo;

          import org.springframework.web.bind.annotation.GetMapping;
          import org.springframework.web.bind.annotation.RestController;

          @RestController
          public class HelloController {
              @GetMapping("/")
              public String hello() {
                  return "Hello World!";
              }
          }

    # Gradle ビルド
    - name: Build Spring Boot application
      shell: |
        chmod +x gradlew
        # 標準出力をリアルタイムに流すために --console=plain を追加
        ./gradlew assemble --no-daemon --console=plain \
          -Dorg.gradle.java.home=/usr/lib/jvm/java-21-amazon-corretto
      args:
        chdir: /home/ec2-user/demo
      async: 300       # 最大5分間バックグラウンド実行
      poll: 15         # 15秒おきに進行を確認
      environment:
        JAVA_HOME: /usr/lib/jvm/java-21-amazon-corretto
        PATH: "{{ ansible_env.PATH }}:/usr/lib/jvm/java-21-amazon-corretto/bin"


    # アプリ起動
    - name: Run Spring Boot application
      shell: |
        cd /home/ec2-user/demo/build/libs
        JAR_FILE=$(ls *.jar | head -n 1)
        nohup java -jar "$JAR_FILE" > /home/ec2-user/app.log 2>&1 &
      become_user: ec2-user
      environment:
        JAVA_HOME: /usr/lib/jvm/java-21-amazon-corretto

    # 起動確認
    - name: Wait for app to start
      wait_for:
        port: 8080
        delay: 10
        timeout: 60

    - name: Verify app response
      uri:
        url: "http://{{ inventory_hostname }}:8080"
        return_content: yes
      register: result

    - name: Print response
      debug:
        msg: "{{ result.content }}"
